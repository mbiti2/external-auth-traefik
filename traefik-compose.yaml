networks:
  myproject_app-network:
    external: true

services:
  traefik:
    image: traefik:v${TRAEFIK_VERSION}
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--entrypoints.web.address=:${TRAEFIK_HTTP_PORT}"
      - "--entryPoints.web.forwardedHeaders.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file=true"
      - "--providers.file.directory=/etc/traefik/dynamic_config"
      - "--providers.file.watch=true"
    ports:
      - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}"
      - "${TRAEFIK_DASHBOARD_PORT}:${TRAEFIK_DASHBOARD_PORT}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-config:/etc/traefik/dynamic_config:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`10.216.68.222`) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-stripprefix"
      - "traefik.http.middlewares.traefik-stripprefix.stripprefix.prefixes=/traefik"
    networks:
      - myproject_app-network
    restart: unless-stopped

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: oauth2-proxy
    environment:
      - OAUTH2_PROXY_PROVIDER=oidc
      - OAUTH2_PROXY_OIDC_ISSUER_URL=http://10.216.68.222:7000/realms/${KEYCLOAK_REALM_NAME}
      - OAUTH2_PROXY_CLIENT_ID=${OAUTH2_PROXY_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${OAUTH2_PROXY_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}
      - OAUTH2_PROXY_EMAIL_DOMAINS=${OAUTH2_PROXY_EMAIL_DOMAINS}
      - OAUTH2_PROXY_REVERSE_PROXY=true
      - OAUTH2_PROXY_REDIRECT_URL=http://10.216.68.222:${TRAEFIK_HTTP_PORT}/oauth2/callback
      - OAUTH2_PROXY_COOKIE_SECURE=false
      - OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL=true
      - OAUTH2_PROXY_HTTP_ADDRESS=http://0.0.0.0:4180
      - OAUTH2_PROXY_SET_AUTHORIZATION_HEADER=true
      - OAUTH2_PROXY_SET_XAUTHREQUEST=true
      - OAUTH2_PROXY_SHOW_DEBUG_ON_ERROR=true
      - OAUTH2_PROXY_PASS_ACCESS_TOKEN=true
      - OAUTH2_PROXY_SKIP_PROVIDER_BUTTONS=true
      # - OAUTH2_PROXY_PROVIDER_BUTTONS={"oidc": "Log in with OIDC"}
      - OAUTH2_PROXY_UPSTREAMS=http://entry-service:80
      # - OAUTH2_PROXY_WHITELIST_DOMAINS=10.216.68.222:8088
      - OAUTH2_PROXY_AUTH_URL=http://10.216.68.222:7000/realms/test-realm/protocol/openid-connect/auth
    command:
      - --http-address=0.0.0.0:4180
      - --cookie-secure=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth2-proxy-router.rule=Host(`10.216.68.222`) && (PathPrefix(`/oauth2`) || PathPrefix(`/oauth2/`))"
      - "traefik.http.routers.oauth2-proxy-router.entrypoints=web"
      - "traefik.http.services.oauth2-proxy.loadbalancer.server.port=4180"
    networks:
      - myproject_app-network
    restart: unless-stopped

  entry-service:
    image: ghcr.io/mbiti2/entry-service:latest
    container_name: entry-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.entry-service.rule=Host(`10.216.68.222`) && Path(`/`)"

      - "traefik.http.routers.entry-service.entrypoints=web"
      - "traefik.http.routers.entry-service.middlewares=oauth2-proxy-auth@file"
      - "traefik.http.services.entry-service.loadbalancer.server.port=80"
    networks:
      - myproject_app-network
    restart: unless-stopped

  post-service:
    image: ghcr.io/mbiti2/posts-service:latest
    container_name: post-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.post-service.rule=Host(`10.216.68.222`) && (PathPrefix(`/service1/`) || PathPrefix(`/service1`))"
      - "traefik.http.routers.post-service.entrypoints=web"
      - "traefik.http.routers.post-service.middlewares=service1-stripprefix@file"
      - "traefik.http.services.post-service.loadbalancer.server.port=3001"
    networks:
      - myproject_app-network
    restart: unless-stopped

  todos-service:
    image: ghcr.io/mbiti2/todos-service:latest
    container_name: todos-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-service.rule=Host(`10.216.68.222`) && (PathPrefix(`/service2/`) || PathPrefix(`/service2`))"
      - "traefik.http.routers.todos-service.entrypoints=web"
      - "traefik.http.routers.todos-service.middlewares=service2-stripprefix@file"
      - "traefik.http.services.todos-service.loadbalancer.server.port=3003"
    networks:
      - myproject_app-network
    restart: unless-stopped

  food-service:
    image: ghcr.io/mbiti2/food-service:latest
    container_name: food-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.food-service.rule=Host(`10.216.68.222`) && (PathPrefix(`/service3/`) || PathPrefix(`/service3`))"
      - "traefik.http.routers.food-service.entrypoints=web"
      - "traefik.http.routers.food-service.middlewares=service3-stripprefix@file"
      - "traefik.http.services.food-service.loadbalancer.server.port=3002"
    networks:
      - myproject_app-network
    restart: unless-stopped