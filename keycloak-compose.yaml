networks:
  app-network:
    driver: bridge

services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev 
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: ${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: 10.216.68.222
      KC_HOSTNAME_PORT: 7000
      KC_HOSTNAME_URL: http://10.216.68.222:7000
      KC_PROXY_HEADERS: forwarded
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_OPTIMIZED_BUILD: true
    ports:
      - "7000:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  keycloak-db:
    image: postgres
    container_name: keycloak-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "${POSTGRES_DATA_PATH}:/var/lib/postgresql/data"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
